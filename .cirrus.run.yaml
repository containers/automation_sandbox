---

# Main collection of env. vars to set for all tasks and scripts.
env:
    ####
    #### Global variables used for all tasks
    ####
    # Save a little typing (path relative to $CIRRUS_WORKING_DIR)
    SCRIPT_BASE: "./contrib/cirrus"
    PODBIN_NAME: podman      # 'podman' or 'remote'
    TEST_ENVIRON: host 
    CI_DESIRED_RUNTIME: crun    # As of 2024-05-28 there are no other supported runtimes
    CI_DESIRED_DATABASE: sqlite # 'sqlite' or 'boltdb'
    CI_DESIRED_STORAGE: overlay # overlay, vfs, or composefs (which is actually overlay)
    # Curl-command prefix for downloading task artifacts, simply add the
    # the url-encoded task name, artifact name, and path as a suffix.
    ART_URL: https://api.cirrus-ci.com/v1/artifact/build/${CIRRUS_BUILD_ID}
    ARTCURL: >-
        curl --retry 5 --retry-delay 8 --fail --location -O
        --url ${ART_URL}

request-mac_task:
  name: Request MAC
  alias: request-mac
  env:
    AWS_ACCESS_KEY_ID: ${AWSAK}
    AWS_SECRET_ACCESS_KEY: ${AWSSK}
    AWS_DEFAULT_REGION: "us-east-1"
    CIRRUS_POOL: ${CPWP}
  container:
    image: ghcr.io/redhat-developer/mapt:pr-382
  request_script: |
    mapt aws mac-pool request \
      --name devtools-1 \
      --version 15 \
      --arch m2 \
      --conn-details-output ${CIRRUS_WORKING_DIR} \
      --it-cirrus-pw-token ${CIRRUS_POOL} \
      --it-cirrus-pw-labels purpose=stage 
  mapt_artifacts:
    path: "${CIRRUS_WORKING_DIR}/dedicated_host_id"
    type: text/plain

podman-machine-test_task:
  name: Test Podman Machine
  alias: podman-machine-test
  depends_on:
    - request-mac
  persistent_worker:
    labels:
      os: darwin
      arch: arm64
      purpose: stage
  test_script: |
      echo "running on-premise"
      curl -o podman-machine.pkg -L https://github.com/containers/podman/releases/download/v5.4.0-rc2/podman-installer-macos-arm64.pkg
      sudo installer -pkg podman-machine.pkg -target /
      export PATH=/opt/podman/bin:$PATH
      export CONTAINERS_MACHINE_PROVIDER=applehv
      podman machine init
      podman machine start

release-mac_task:
  name: Release MAC
  depends_on:
    - podman-machine-test
  env:
    AWS_ACCESS_KEY_ID: ${AWSAK}
    AWS_SECRET_ACCESS_KEY: ${AWSSK}
    AWS_DEFAULT_REGION: "us-east-1"
  container:
    image: ghcr.io/redhat-developer/mapt:pr-382
  clone_script:
    true
  release_script: |
    time $ARTCURL/request-mac/mapt/dedicated_host_id
    mapt aws mac-pool release \
      --dedicated-host-id $(cat dedicated_host_id)

